@layout LoginLayout
@page "/"
@using GoilGasStation.Blazor.Shared.ViewModels

@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@inject HttpClient httpClient

<h3>Login</h3>

<section class="vh-100" style="background-color: #b3b3b3;">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col col-xl-7">
                <div class="card" style="border-radius: 4rem;">
                    <div class="row g-0">
                        <div class="col-md-6 col-lg-6 d-flex align-items-center">
                            <div class="card-body p-4 p-lg-5 text-black">
                                <form>
                                    <h4 class="fw-normal mb-3 pb-3" style="letter-spacing: 1px;">Manager Account</h4>
                                    <div class="form-outline mb-4">
                                        <input @bind="@EmployeeItem.Username" class="form-control form-control-lg" placeholder="Enter Username" />
                                        <label class="form-label" for="form2Example17">Username</label>
                                    </div>
                                    <div class="form-outline mb-4">
                                        <input @bind="EmployeeItem.Password" type="password" @onkeyup=InputOnEnterClick id="passwordForm" class="form-control form-control-lg" />
                                        <label class="form-label" for="form2Example27" placeholder="Enter Password">Password</label>
                                    </div>
                                    <div class="pt-1 mb-4">
                                        <button class="btn btn-dark btn-lg btn-block" type="button" @onclick="() => Authenticate()"> Login</button>
                                    </div>
                                    <a href="" class="small text-muted">Create A Username</a>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@code {
    EmployeeViewModel EmployeeItem = new EmployeeViewModel();
    protected override async Task OnInitializedAsync()
    {
    }

    private async void Authenticate()
    {
        EmployeeViewModel existinguser;

        if (string.IsNullOrWhiteSpace(EmployeeItem.Username) && string.IsNullOrWhiteSpace(EmployeeItem.Password))
        {
            await jsRuntime.InvokeVoidAsync("window.alert", "Please fill all the fields");
        }
        else
        {
            var employeelist = await httpClient.GetFromJsonAsync<List<EmployeeViewModel>>("https://localhost:7069/Employee");
            var users = employeelist.Where(x => x.Password is not null && x.Username is not null).ToList();
            if (users is not null)
            {
                existinguser = users.Find(y => y.Password.Equals(EmployeeItem.Password) && y.Username.Equals(EmployeeItem.Username));
                if (existinguser != null)
                {
                    if (existinguser.EmployeeType == EmployeeType.Cashier)
                    {

                        navigationManager.NavigateTo($"/{existinguser.EmployeeType}/CustomerList");
                    }
                    if (existinguser.EmployeeType == EmployeeType.Staff)
                    {

                        navigationManager.NavigateTo($"/{existinguser.EmployeeType}/ItemList");
                    }
                    if (existinguser.EmployeeType == EmployeeType.Manager)
                    {

                        navigationManager.NavigateTo($"/Index");
                    }
                }
                else
                {
                    await jsRuntime.InvokeVoidAsync("window.alert", "Please check Username or Password");
                    //MessageBox.Show("Wrong Username or Password, please try again.", "Try Again");
                    return;
                }

            }
            else if (EmployeeItem.Username == "admin" && EmployeeItem.Password == "admin")
            {
                navigationManager.NavigateTo("/index");
            }
        }
    }

    private async void InputOnEnterClick(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            Authenticate();
        }
    }
}
