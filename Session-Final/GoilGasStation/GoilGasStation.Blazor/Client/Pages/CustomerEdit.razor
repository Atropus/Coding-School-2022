@page "/CustomerList/edit/{Id:guid?}"
@using global::GoilGasStation.Blazor.Shared.ViewModels
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>Customer</h3>

@if (CustomerItem == null)
{
    <p>Loading ...</p>
}
else
{
    <div class="row">
        <div class="col-md-6">
            <label class="form-label">Name</label>
            <input class="form-control" @bind="@CustomerItem.Name" />
        </div>
        <div class="col-md-6">
            <label class="form-label">Surname</label>
            <input class="form-control" @bind="@CustomerItem.Surname" />
        </div>
        <div class="col-md-6">
            <label class="form-label">Salary Per Month</label>
            <input class="form-control" @bind="@CustomerItem.CardNumber" />
        </div>
    </div>

    <div class="row mt-2">
        <div class="col">
            <button class="btn btn-success" @onclick="OnSave">Save</button>
            <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
        </div>
    </div>
}

@code {
    [Parameter] public Guid? ID { get; set; }
    CustomerEditViewModel CustomerItem { get; set; } = new();



    protected override async Task OnInitializedAsync()
    {
            CustomerItem = await httpClient.GetFromJsonAsync<CustomerEditViewModel>($"customer/{(ID == null ? Guid.Empty : ID)}");
    }

    protected async Task OnSave()
    {
        HttpResponseMessage response;
        if (ID == null)
        {
            response = await httpClient.PostAsJsonAsync("customer", CustomerItem);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("customer", CustomerItem);
        }
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("customerlist");
    }

    protected void OnCancel()
    {
        navigationManager.NavigateTo("customerlist");
    }
}
